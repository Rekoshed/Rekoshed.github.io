function lineStepKsur(x_path, y_path, scale, okno,count,indent,indentLine,ax,ay,bx,by,) { // –≤—ã–Ω–æ—Å —Ä–∞–∑–º–µ—Ä–∞
globalCalk(width, step, width2,height, scale, number,x,y, okno);
	clip(okno);
	var canvas = document.getElementById(okno), 
	context = canvas.getContext("2d");
	
	textAlign = "left"; // –ø–æ–∑–∏—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Ä–∞–∑–º–µ—Ä–∞ –≤ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
	textBaseline = "bottom"; // –ø–æ–∑–∏—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Ä–∞–∑–º–µ—Ä–∞ –≤ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
	x_textPoint = 0; // –ª–∏–Ω–∏—è –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞—é—à–∞—è —Ç–µ–∫—Å—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–Ω–æ–π –ª–∏–Ω–∏–∏
	x_textStep = 5; // x —Å–º–µ—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø—Ä–∏–≤—è–∑–∫–∏ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
	y_textStep = -2; // y —Å–º–µ—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø—Ä–∏–≤—è–∑–∫–∏ –≤ –ø–∏–∫—Å–µ–ª—è—Ö	
	textStart = 1.5;// –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–º–µ—â–µ–Ω–∏—è –ø—Ä–∏–≤—è–∑–∫–∏ (2) –∫ —Ä–∞–∑–º–µ—Ä–Ω–æ–π –ª–∏–Ω–∏–π –¥–ª—è —Ç–µ–∫—Å—Ç–∞
	// –ø–æ–∑–∏—Ü–∏–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
	if (x_path == 1){textAlign = "right"; 
			 textBaseline = "top";
			 x_textPoint = 0;
			 x_textStep = -5;
			 }
	 if (y_path == 0) {ax = bx}
	 if (x_path == 0) {by = ay;
	 				   textStart = 6;}
	 if (y_path == 1) {textBaseline = "top";
	 					y_textStep = +6;
	 					}
	// —Ä–∞—Å—á—ë—Ç –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏
	if (ax > bx){  a = (ax - bx) / scale}
	if (ax < bx){  a = (bx - ax ) / scale}
	if (ax == bx){  a = 0}
	
	if (ay > by){  b = (ay - by) / scale}
	if (ay < by){  b = (by - ay ) / scale}
	if (ay == by){  b = 0}
	
	a = Math.floor(a * 10) / 10;// –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ/–æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ —á–∏—Å–ª–∞
	b = Math.floor(b * 10) / 10;
	c = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)); // –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
	// –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
	if (c > 99) {c = Math.round(c);}
    if (c < 100)  {c = Math.round(c * 10) / 10;} // –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
    // –†–∞—Å—á—ë—Ç —Ç–æ—á–µ–∫ –≤—ã–Ω–æ—Å–∫–∏
    count = 1;	
    long_x_ksur = bx_StepKsur[count] - ax_StepKsur[count] ;	// a	 
    long_y_ksur = cy_ksur[count] - by_ksur[count] ;	// b	 
    long_ksur = Math.sqrt( Math.pow(long_x_ksur,2) + Math.pow(long_y_ksur,2));// –¥–ª–∏–Ω–Ω–∞ —à–∞–≥–∞ —Å—Ç—É–ø–µ–Ω–∏ –∫–æ–º–æ—É—Ä–∞ –Ω–∞ —Ç–µ—Ç–µ–≤–µ	/ c /	 
    h_size = (long_x_ksur * long_y_ksur) / long_ksur; // c
    x_size = triangle_sin (long_y_ksur,long_ksur, h_size) * x_path; //–ø—Ä–∏–≤—è–∑–∫–∞ –ø–æ –• / b /
    y_size = Math.sqrt( Math.pow(x_size,2) + Math.pow(h_size,2)) * y_path;// –ø—Ä–∏–≤—è–∑–∫–∞ –ø–æ Y	/ a /	 
    
	         function indentSize(indentS) {    // –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª–∏–Ω–∏–π –≤—ã–Ω–æ—Å–∫–∏, –¥–ª–∏–Ω–Ω–∞ –æ—Ç—Å—Ç—É–ø–ø   
	ax_lineStepKsur = ax - x_size /indentS;
	ay_lineStepKsur = ay + y_size / indentS;
	bx_lineStepKsur = bx - x_size / indentS;
	by_lineStepKsur = by + y_size / indentS;
            	} // end indentSize
	 
	 indentSize(indentLine);
	x_textStepKsur = ax_lineStepKsur + (bx_lineStepKsur - ax_lineStepKsur) / textStart;
	y_textStepKsur = ay_lineStepKsur + (by_lineStepKsur - ay_lineStepKsur) / textStart;	 
	 context.beginPath();	 
	 // —Ä–∞–∑–º–µ—Ä–Ω–∞—è –ª–∏–Ω–∏—è	 
	 context.moveTo(ax_lineStepKsur, ay_lineStepKsur);
	 context.lineTo(bx_lineStepKsur, by_lineStepKsur);	 
	 // –≤—ã–Ω–æ—Å–Ω—ã–µ –ª–∏–Ω–∏–∏ _lineStepKsur
	 indentSize(indent);	 
	 context.moveTo(ax, ay);// —Å—Ç–∞—Ä—Ç –ø–µ—Ä–≤–æ–π –≤—ã–Ω–æ—Å–∫–∏
	 context.lineTo(ax_lineStepKsur, ay_lineStepKsur);
	 context.moveTo(bx,by); // —Å—Ç–∞—Ä—Ç –≤—Ç–æ—Ä–æ–π –≤—ã–Ω–æ—Å–∫–∏
	 context.lineTo(bx_lineStepKsur, by_lineStepKsur);
	 // –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Ä–∞–∑–º–µ—Ä–∞
	 context.moveTo(x_textStepKsur, y_textStepKsur);
	 context.lineTo(x_textStepKsur + x_textPoint, y_textStepKsur);
	 context.textAlign = textAlign;
	 context.textBaseline = textBaseline;
	 context.fillText( c , x_textStepKsur + x_textStep, y_textStepKsur + y_textStep)	 
	context.strokeStyle = "grey";
	context.stroke();
	} // end lineStepKsur
	
	
	function size_(ax,ay,bx,by,posX,posY,indent){
	//–æ—Ç A –¥–æ B –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã,
	//pos-–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏–Ω–∏–π —Ä–∞–∑–º–µ—Ä–∞.0-–Ω–µ—Ç —Å–º–µ—â–µ–Ω–∏—è,–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ
	//,indent-–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤—ã–ª–µ—Ç–∞ –ª–∏–Ω–∏–∏. –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–Ω—è–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ

// –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞ —Ä–∞–∑–º–µ—Ä–∞
var a=0;
var b=0;
var c=0;
// –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å–º–µ—â–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤—ã–Ω–æ—Å–Ω–æ–π –∏ —Ä–∞–∑–º–µ—Ä–Ω–æ–π –ª–∏–Ω–∏–π
var move_x = indent*posX*scale; 
var move_y = triangle_alfa (indent ,data.height+data.width,data.lenght)* posY*scale;
// –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–º–µ—â–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ä–∞–∑–º–µ—Ä–Ω–æ–π –≤–¥–æ–ª—å –≤—ã–Ω–æ—Å–Ω–æ–π –ª–∏–Ω–∏–π
var movesize= 5; //–µ–¥–µ–Ω–∏—Ü—ã —Å–º–µ—â–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–Ω–æ–π –ª–∏–Ω–∏–∏
var movesize_x = movesize *posX; 
var movesize_y = triangle_alfa (movesize ,data.height+data.width,data.lenght)* posY;


//–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –≤—ã–Ω–æ—Å–Ω—ã—Ö –ª–∏–Ω–∏–π. –í–æ–∑–≤—Ä–∞—â–∞—é—Ç –∏—Å—Ö–æ–¥–Ω—É—é –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –ø—Ä—è–º–æ–π —Ä–∞–∑–º–µ—Ä–Ω–æ–π –ª–∏–Ω–∏–∏
var kby=1;
var kay=1;
var kbx=1;
var kax=1;
size_AB = []; //  –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ä–∞–∑–º–µ—Ä–Ω–æ–π –ª–∏–Ω–∏–∏
sizeText = []; // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–µ–∫—Å—Ç–∞ —Ä–∞–∑–º–µ—Ä–∞
// –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–Ω–æ–π –ª–∏–Ω–∏–∏ –≤–¥–æ–ª—å –æ—Å–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
if (posX == 0 && posY == 1) {kay=ay/by;
						 	 ay = by};
if (posX == 0 && posY == -1) {kby=by/ay;
							  by = ay};
if (posY == 0 && posX == 1) {kax=ax/bx;
							 ax = bx};
if (posY == 0 && posX == -1) {kbx=bx/ax;
							  bx = ax};
// —Ä–∞—Å—á—ë—Ç –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏
if (ax > bx){  a = (ax - bx) / scale}
if (ax < bx){  a = (bx - ax ) / scale}
if (ax == bx){  a = 0}

if (ay > by){  b = (ay - by) / scale}
if (ay < by){  b = (by - ay ) / scale}
if (ay == by){  b = 0}

a = Math.floor(a * 10) / 10;// –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ/–æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ —á–∏—Å–ª–∞
b = Math.floor(b * 10) / 10;

size_AB = {//  —Ç–æ—á–∫–∏ —Ä–∞–∑–º–µ—Ä–Ω–æ–π –ª–∏–Ω–∏–∏üÜé
	ax: ax+move_x-movesize_x,
	ay: ay+move_y-movesize_y,
	bx: bx+move_x-movesize_x,
	by: by+move_y-movesize_y,
	l:  Math.sqrt(Math.pow(a,2) + Math.pow(b,2)), // –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ 
	textX: (ax+move_x- movesize_x ) - (ax+move_x-movesize_x - bx+move_x-movesize_x)/2,
	textY: (ay+move_y-movesize_y) - (ay+move_y-movesize_y - by+move_y-movesize_y)/2,

          };

// –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
size_AB.l = Math.floor(size_AB.l * 10) / 10;
//console.log(cc+ " & "+size_AB.l)

canvas = document.getElementById("clip"), 
context = canvas.getContext("2d");
context.beginPath();
context.strokeStyle = "grey";
// —Ä–∞–∑–º–µ—Ä–Ω–∞—è –ª–∏–Ω–∏—è
context.moveTo( size_AB.ax,size_AB.ay);
context.lineTo( size_AB.bx,size_AB.by);
//–≤—ã–Ω–æ—Å–Ω—ã–µ –ª–∏–Ω–∏–∏
context.moveTo(ax*kax,ay*kay);
context.lineTo(ax+move_x,ay+move_y);

context.moveTo(bx*kbx,by*kby);
context.lineTo(bx+move_x,by+move_y);
//—Ç–µ–∫—Å—Ç
context.fillStyle = "red";
context.fillText( size_AB.l ,size_AB.textX+move_x-movesize_x, size_AB.textY+move_y-movesize_y)	 
	
context.stroke();
context.closePath()	

test_work("sizea","a "+a);
test_work("sizeb","b "+b);
test_work("sizeABL","size_AB.l "+size_AB.l);
	}; // end function size_
	
function size_ttva(visual){
test_work("sizea",0);
test_work("sizeb",0);
test_work("sizeABL",0);
switch(visual){
 case 1:
size_(ttva.ax,ttva.ay,ttva.bx,ttva.by,1,0,data.indent); // –≤—ã—Å–æ—Ç–∞ –ø—Ä–æ–µ–∫—Ü–∏–∏ —Ç–µ—Ç–µ–≤—ã
size_(ttva.ax,ttva.ay,ttva.bx,ttva.by,1,-1,indent); // –≤–Ω–µ—à–Ω—è—è –¥–ª–∏–Ω–Ω–∞ —Ç–µ—Ç–µ–≤—ã
size_(ttva.ax,ttva.ay,ttva.bx,ttva.by,0,-1,indent); // –¥–ª–∏–Ω–Ω–∞ –ø—Ä–µ–µ–∫—Ü–∏–∏ —Ç–µ—Ç–µ–≤—ã
size_(ttva_back.cx,ttva_back.cy,ttva_back.dx,ttva_back.dy,-1,1,data.indent); // –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –¥–ª–∏–Ω–∞ —Ç–µ—Ç–µ–≤—ã

size_(ttva.ax,ttva.ay,ttva_back.dx,ttva_back.dy,-1,0,data.indent); // –≤–µ—Ä—Ö–Ω–∏–π —Å—Ä–µ–∑ –¥–ª–∏–Ω–Ω–∞
size_(ttva.ax,ttva.ay,ttva_Point_acx,ttva_Point_acy,1,-1,data.indent); // –≤–µ—Ä—Ö–Ω–∏–π —Å—Ä–µ–∑ –≥–ª—É–±–∏–Ω–∞
l_fase_ttva_v = size_AB.l // —Å—Ä–µ–∑ —Ç–µ—Ç–µ–≤—ã –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π
size_(ttva_back.cx,ttva_back.cy,ttva.bx,ttva.by,0,-1,data.indent); // –Ω–∏–∂–Ω–∏–π —Å—Ä–µ–∑ –¥–ª–∏–Ω–Ω–∞
size_(ttva.bx,ttva.by,ttva_Point_bcx,ttva_Point_bcy,1,-1,data.indent); // –Ω–∏–∂–Ω–∏–π —Å—Ä–µ–∑ –≥–ª—É–±–∏–Ω–∞
l_fase_ttva_g = size_AB.l // —Å—Ä–µ–∑ —Ç–µ—Ç–µ–≤—ã –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π
break;
case 2:

break;
	} // end switch
} // end size_ttva()

function size_ksur(visual){
test_work("sizea",0);
test_work("sizeb",0);
test_work("sizeABL",0);
var end = data.number - 1;
switch(visual){
 case 1:
size_(ksur_v[0].ax,ksur_v[0].ay, ksur_v[0].dx,ksur_v[0].dy, 1,0,data.indent); // b
if(ksur_day > ksur_g[0].dy){ //–ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —É–≥–æ–ª –≤–µ—Ä—Ö–Ω–µ–≥–æ –∫–æ—Å–æ—É—Ä–∞
size_( ksur_dax+data.s_ksur*scale, ksur_g[0].dy, ksur_dax+data.s_ksur*scale,ksur_day+fase_ksur_v*scale,1,0,data.indent); // –æ–±—â–∞—è –≤—ã—Å–æ—Ç–∞ –¥–æ–±–∞–≤—ã—à–∞
size_( ksur_dax, ksur_g[0].dy, ksur_dax,ksur_day,-1,0,data.indent); // —Å—Ä–µ–∑ –≤—ã—Å–æ—Ç—ã –¥–æ–±–∞–≤—ã—à–∞

size_( ksur_dax,ksur_day, ksur_v[0].dx,ksur_v[0].dy,-1,1,data.indent );} // c
if(ksur_day <= ksur_g[0].dy){//—Å—Ä–µ–∑–∞–Ω —É–≥–æ–ª
size_( ksur_g[0].dx,ksur_g[0].dy, ksur_v[0].ax,ksur_v[0].ay,0,1,data.indent); // a
size_( ksur_g[0].dx,ksur_g[0].dy, ksur_v[0].dx,ksur_v[0].dy,-1,1,data.indent );} //c 


size_( ksur_g[1].ax,ksur_g[1].ay, ksur_g[1].dx,ksur_g[1].dy,-1,1,data.indent ); //L c—Ä–µ–∑ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å –∫–æ—Å–æ—É—Ä–∞
l_fase_ksur_g = size_AB.l //–¥–ª–∏–Ω–Ω–∞ —Å—Ä–µ–∑–∞ –∫–æ—Å–æ—É—Ä–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ
size_( ksur_v[0].cx,ksur_v[0].cy, ksur_v[0].dx,ksur_v[0].dy,-1,1,data.indent ); //L c—Ä–µ–∑ –≤–µ—Ä—Ç–∏–∫–∞–ª—å –∫–æ—Å–æ—É—Ä–∞
l_fase_ksur_v = size_AB.l //–¥–ª–∏–Ω–Ω–∞ —Å—Ä–µ–∑–∞ –∫–æ—Å–æ—É—Ä–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–≥–æ


if(ksur_day <= ksur_g[0].cy ){//—É–≥–æ–ª —Å—Ä–µ–∑–∞–Ω –≤–µ—Ä—Ö–Ω–µ–≥–æ –∫–æ—Å–æ—É—Ä–∞
 size_( ksur_g[0].dx,ksur_g[0].dy, ksur_dax,ksur_day,-1,1,data.indent ); //L c—Ä–µ–∑ —É–≥–ª–∞ –≤–µ—Ä—Ö–Ω–µ–≥–æ –∫–æ—Å–æ—É—Ä–∞
//console.log('—É–≥–æ–ª'+size_AB.l)
}

 size_( ksur_g[end].bx, ksur_g[end].by , ksur_g[end].cx,max_y,1,0,data.indent ); //–≤—ã—Å–æ—Ç–∞ –Ω–∏–∂–Ω–µ–≥–æ  –∫–æ—Å–æ—É—Ä–∞
 size_( ksur_g[end-1].bx, ksur_g[end-1].by , ksur_v[end-1].cx, ksur_v[end-1].cy,1,0,data.indent ); //–≤—ã—Å–æ—Ç–∞   –∫–æ—Å–æ—É—Ä–∞
 size_( ksur_v[end-1].dx, ksur_v[end-1].dy , ksur_v[end-1].dx, ksur_v[end-1].cy,-1,0,data.indent ); //–≤—ã—Å–æ—Ç–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å —Å—Ä–µ–∑–∞
 size_( ksur_g[end].ax, ksur_g[end].dy , ksur_g[end].dx,ksur_g[end].dy,0,1,data.indent ); //–≤—ã—Å–æ—Ç–∞ –Ω–∏–∂–Ω–µ–≥–æ  –∫–æ—Å–æ—É—Ä–∞

	if(ksur_v[i].dx > ksur_ttva_down){ //ttva.bx. —Ä–æ–≤–Ω—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫
	 size_( ksur_ttva_down-fase_ksur_g*scale, max_y-data.s_ksur*scale , ksur_v[end].dx,max_y-data.s_ksur*scale,0,-1,data.indent ); //–¥–ª–∏–Ω–Ω–∞ –Ω–∏–∂–Ω–µ–≥–æ –¥–æ–±–∞–≤—ã—à–∞
	 size_( ksur_ttva_down, max_y, ksur_v[end].dx,max_y,0,1,data.indent ); //–Ω–∏–∂–Ω–∏–π –¥–æ–±–∞–≤—ã—à –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä
	};

	if(ksur_v[i].dx < ksur_ttva_down){ // ttva.bx. –æ—Ç—Å–µ—á—ë–Ω–Ω—ã–π —É–≥–æ–ª
			 size_(ksur_v[i].ax, max_y,ksur_v[i].dx, max_y-ksur_cutY,-1,0,data.indent ); //–Ω–∏–∂–Ω–∏–π —Å–∫–æ—Å 
			 size_(ksur_v[i].ax, max_y,ksur_ttva_down, max_y,0,1,data.indent ); //–Ω–∏–∂–Ω–∏–π —Å–∫–æ—Å 
	};

cut_v= l_fase_ksur_v /data.s_ksur;
cut_g=l_fase_ksur_g/data.s_ksur;


test_work("ksurCut", "cut_v: "+ cut_v );
test_work("ksurCut.2", "cut_g: "+cut_g);
break;
case 2:

break;
	} // swith
} // end size_ksur()


function size_stair_step(visual){
end = data.number - 1;
switch(visual){
 case 1:
test_work("sizea",0);
test_work("sizeb",0);
test_work("sizeABL",0);
size_( step[0].start_x, step[0].start_y+step[0].finish_y, step[0].finish_x+step[0].start_x, step[0].finish_y +step[0].start_y,0,1,data.indent); // —Å—Ç—É–ø–µ–Ω—å
size_( step[1].start_x, step[1].start_y+ step[1].finish_y ,pod_step[1].start_x, pod_step[1].start_y,0,1,data.indent); // –¥–æ –ø–æ–¥—Å—Ç—É–ø—ë–Ω–∫–∞ —Å—Ç—É–ø–µ–Ω—å
size_(step[0].start_x+ step[0].finish_x ,step[0].start_y,step[0].start_x+ step[0].finish_x,step[1].start_y,1,0,data.indent);//  –≤—ã—Å–æ—Ç–∞ —à–∞–≥–∞
size_(pod_step[1].start_x+pod_step[1].finish_x,pod_step[1].start_y,pod_step[1].start_x+pod_step[1].finish_x,step[2].start_y,1,0,data.indent);//  –≤—ã—Å–æ—Ç–∞ —à–ø–æ–¥—Å—Ç—É–ø–µ–Ω–∫–∞
size_( pod_step[end].start_x+pod_step[end].finish_x,pod_step[end].start_y ,pod_step[end].start_x+pod_step[end].finish_x,max_y,1,0,data.indent);//  –≤—ã—Å–æ—Ç–∞ —à–ø–æ–¥—Å—Ç—É–ø–µ–Ω–∫–∞ end
size_( pod_step[end-1].start_x, pod_step[end-1].start_y ,pod_step[end-1].start_x,pod_step[end-1].start_y+pod_step[end-1].finish_y,-1,0,data.indent);//  –≤—ã—Å–æ—Ç–∞ —à–ø–æ–¥—Å—Ç—É–ø–µ–Ω–∫–∞ back

size_( pod_step[end-1].start_x+pod_step[end-1].finish_x,pod_step[end-1].start_y, step[end-1].finish_x+step[end-1].start_x, step[end-1].finish_y +step[end-1].start_y,0,1,data.indent); // –≤—ã–ø—É—Å–∫

size_( step[0].start_x, max_y, step[end].finish_x+step[end].start_x,max_y,0,1,data.indent); // –¥–ª–∏–Ω–Ω–∞ –º–∞—Ä—à–∞
size_(step[end].start_x+step[end].finish_x,step[0].start_y,step[end].start_x+step[end].finish_x,max_y,1,0,data.indent);//  –≤—ã—Å–æ—Ç–∞ –º–∞—Ä—à–∞
break;
case 2:
end = data.number - 1;
size_( stepw[0].start_x, stepw[0].start_y+stepw[0].finish_y, stepw[0].finish_x+stepw[0].start_x, stepw[0].finish_y +stepw[0].start_y,0,1,data.indent); // —Å—Ç—É–ø–µ–Ω—å
size_( stepw[1].start_x+ stepw[1].finish_x, stepw[0].start_y+ stepw[0].finish_y ,stepw[1].start_x+ stepw[1].finish_x, stepw[1].start_y,1,0,data.indent); // –ø–æ–¥—Å—Ç—É–ø–µ–Ω—å
size_( stepw[0].start_x, stepw[0].start_y, stepw[0].start_x, stepw[data.number].finish_y +stepw[data.number].start_y,0,1,data.indent); // —Å—Ç—É–ø–µ–Ω—å
break;
	
	}// swith
} // end size




function math_test(){
ksur_A = (ksur_v[0].ax-ksur_g[0].dx)/scale ;
ksur_B = (ksur_v[0].dy-ksur_v[0].ay)/scale ;
ksur_C = C(ksur_A,ksur_B) ;



test_work("ksur_A",(parseInt(ksur_A*10))/10);
test_work("ksur_B",(parseInt(ksur_B*10))/10);
test_work("ksur_C",(parseInt(ksur_C*10))/10);


}